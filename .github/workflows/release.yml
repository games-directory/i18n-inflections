name: Ruby Gem

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  check_version:
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check_version.outputs.version_changed }}
      new_version: ${{ steps.check_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check if version changed
        id: check_version
        run: |
          git diff HEAD^ HEAD -- lib/i18n_on_steroids/version.rb | grep '+VERSION' || echo "No version change"
          if git diff HEAD^ HEAD -- lib/i18n_on_steroids/version.rb | grep '+VERSION'; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            new_version=$(grep 'VERSION' lib/i18n_on_steroids/version.rb | awk -F'"' '{print $2}')
            echo "new_version=$new_version" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Publish
    needs: check_version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        ruby: ["3.0", "3.1", "3.2", "3.3", "head"]
    steps:
      - name: Publish to GPR
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:github: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push --KEY github --host https://rubygems.pkg.github.com/${OWNER} *.gem
        env:
          GEM_HOST_API_KEY: "Bearer ${{secrets.GITHUB_TOKEN}}"
          OWNER: ${{ github.repository_owner }}

      - name: Publish to RubyGems
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"

  create_release:
    name: Create Release
    needs: [check_version, build]
    runs-on: ubuntu-latest
    if: needs.check_version.outputs.version_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check_version.outputs.new_version }}
          release_name: Release ${{ needs.check_version.outputs.new_version }}
          draft: false
          prerelease: false